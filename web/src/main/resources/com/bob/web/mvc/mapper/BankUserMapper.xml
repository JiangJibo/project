<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bob.web.mvc.mapper.BankUserMapper">
    <!--################################ Mybatis逆向工程生成,请勿编辑! ################################-->
    <resultMap id="BaseResultMap" type="com.bob.web.mvc.entity.model.BankUser">
        <!--@mbg.generated-->
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="adress" jdbcType="VARCHAR" property="adress"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="idcard" jdbcType="VARCHAR" property="idcard"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        user_id, username, birthday, adress, age, sex, phone_number, email, idcard
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from bank_user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from bank_user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.bob.web.mvc.entity.model.BankUser">
        <!--@mbg.generated-->
        insert into bank_user (user_id, username, birthday,
        adress, age, sex, phone_number,
        email, idcard)
        values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
        #{adress,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{phoneNumber,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="userId" parameterType="com.bob.web.mvc.entity.model.BankUser">
        <!-- 复合字段复合列的使用方法 -->
        <!--<selectKey keyProperty="userId,age" keyColumn="user_id,age" resultType="java.process.Map" order="BEFORE">
            select 3 user_id ,10 age
        </selectKey>-->
        <!--@mbg.generated-->
        insert into bank_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="adress != null">
                adress,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="idcard != null">
                idcard,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="adress != null">
                #{adress,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bob.web.mvc.entity.model.BankUser">
        <!--@mbg.generated-->
        update bank_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="adress != null">
                adress = #{adress,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                idcard = #{idcard,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bob.web.mvc.entity.model.BankUser">
        <!--@mbg.generated-->
        update bank_user
        set username = #{username,jdbcType=VARCHAR},
        birthday = #{birthday,jdbcType=DATE},
        adress = #{adress,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        sex = #{sex,jdbcType=INTEGER},
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        idcard = #{idcard,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <!--################################ Mybatis逆向工程生成,请勿编辑! ################################-->

    <select id="selectByIds" parameterType="java.util.ArrayList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM BANK_USER
        <foreach collection="list" open="WHERE USER_ID IN (" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="selectByPages" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM BANK_USER WHERE AGE = #{age}
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectByIdAndAge" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM BANK_USER WHERE USER_ID = #{userId,jdbcType=INTEGER} AND AGE = #{age,jdbcType=INTEGER}
    </select>

</mapper>